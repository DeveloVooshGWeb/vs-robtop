{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About Vs Robtop is a mod developed by Breadward MacGluten. This is the official charter for the mod. What you are reading is the documentation for the charter. This piece of information was meant for the following people: Members: Breadward MacGluten # Charting Mine and Valen's songs. MauveDash # Charting her own songs. Duckstuffed # Charting his own songs. GWebDev # Probably some of my songs or just the events of my songs. Myst # I have no idea what he will do. Charter Problems No Sound Tray (YET) When making a chart PLEASE create a folder named as the song you have entered in the charter in the path of assets/data/charts/thesongyouentered . The song name provided in the Charter must exactly match the folder name which is made inside of assets/data/charts . Gameplay isn't finished so if it crashes don't be surprised. (I'm talking about when you preview the chart by pressing Enter on the Charter) If you press Enter it'll test the Chart BUT it also autosaves and overwrites the Chart at assets/data/charts/thesongyouentered/1.bin . Only save the Chart AS 1.bin inside of assets/data/charts/thesongyouentered . Holding Alt to drag place notes can cause lagging depending on the amount of notes you have placed. Event Notes CANNOT be previewed in the gameplay because i'd have to code the functions you call from the event notes in the Gameplay. You can only chart and preview . There is no Title Screen or Menu . (Hey that rhymed) OGG files should be placed inside of assets/ogg/songs/thesongyouentered/Inst.ogg Inst.ogg is required while Voices.ogg isn't required. ( If you include Voices.ogg it'll have audio cracks so i suggest exporting your ogg file with the INSTRUMENTAL and VOICES as Inst.ogg instead of separating both of them just like what \"Tutorial\" did ) There is no keybind to change the note's sustain length . (You have to manually type it) You have to use a 44100 hz speaker so the notes won't lag. Vs Robtop is the only one that can open the saved charts . IF YOU ACCUSE ME OF HACKING YOUR COMPUTER Charter Features Pressing Q or E will change what type of note you place next. Pressing Tab allows you to change what data of the next notes you place are. Holding Alt and Holding Left Click while moving your mouse allows you to place Multiple Notes. Holding Control and Pressing Left Click on a note will allow you to select the note and change its data. Pressing Left or Right allows you to change sections. Holding Up or Down will allow you to scroll through the section. (Keyboard) Scrolling Up or Down will also allow you to scroll through the section. (Mouse) Holding Shift allows you to free place notes. (Disable snapping) Pressing Spacebar allows you to Pause/Resume the music. There are buttons that explain what else you can do. If you are wondering why the song doesn't load when you enter it PRESS THE RELOAD SONG BUTTON. What Else The Charter includes another type of note called an Event Note. (Kinda like in Psych Engine) However the Event Notes here are actually coded. The Documentation will show the list of things you can do with the Event Notes. If you, a member of the mod, wants to do something that isn't in the list of things that you can do with the Event Notes then contact me to add your OWN function. (I will also show the name of the person who added these functions) The Documentation will constantly be edited when someone adds something to the list of Event Note functions. (But it will no longer be edited once the mod is rolled out.) The Documentation will also be made public after the mod released. Hard Coding And Soft Coding Before showing the list of things you can do with the Event Notes, you'd have to learn what you can pass in the list of things you can do with the Event Notes. They are defined as functions which is type of code that executes multiple code. (I am the one who is going to be coding this) First you need to know the difference between Hard Coding and Soft Coding. You also need to know about some terminology. Compiling is a process in which human written code is translated into machine code or 1s and 0s which the computer can only understand. After compiling, you cannot retrieve the human readable code. Hard Coding is the process wherein the code is being embedded directly in an application which is compiled. Soft Coding is the process wherein the code isn't compiled but is read by a compiled application to execute/run. I don't think that GDScript (which is the coding language Godot uses) is Hard Coding but i'll call it that way since it's changed into .gdc files and i have no idea if they can be modified or not but whatever. So the functions are coded by me and are hardcoded while the Event Notes are coded by the charter and are softcoded . Variables Variables are stuff that you store data to in Coding just like in Math Algebra. Variables will be used in Event Notes but not by declaring one like in your Typical Coding Session. In this case, you pass data directly in the function with the Event Notes. But the question is... what do i pass? Types Of Variables There are plenty types of Variables SPECIALLY in game engines like Godot but for GEVT (GWeb Event) Code, we will only use 5 types of variables. Here is the list of Variables: int - An Integer is a type of variable that can hold Positive or Negative numbers. The most common type of Integer is the Int32 type which allows you to store a 4 byte number. By default, an Int32 is signed giving it the ability to store Negative numbers. The minimum value of an Int32 is -2147483648 and the maximum value of an Int32 is 2147483647 . String - A String is a type of variable that can hold TEXT . It usually starts with 2 Quotation Marks. In my event system, you HAVE to use Quotation Marks instead of Apostrophes. An example of a String is: \"Hello World\". float - A Float is a type of variable that can hold Positive or Negative DECIMAL numbers. Floats are usually 4 bytes like Int32 variables but it depends and i could be wrong. A Float is usually called as a Single because they have no Girlfriend . double - A Double is a type of variable that is like a Float but can hold twice more because it is a Couple. bool - A Boolean is a type of variable that can be either true or false. (In lowercase) Me mentioning that Floats have no Girlfriends (they are still called as a Single) and doubles being Couples are jokes and are not real terminologies in coding. Before The Function List I hope that you will understand the following list of functions you can code in the Event Notes. Before the list tho i wanted to show you a demonstration of how the functions should be called. FUNCTION ARG1 ARG2 ARG3 ARG4 The first word is the function you want to call and the arg1, arg2, arg3 and arg4 are the arguments you pass. Each of the arguments should be a variable type. The type of arguments in each function will be specified in the function list. The function names are also CASE SENSITIVE meaning you have to type it in the same capitalization and stuff. Good Luck! Function List camShake This Function Was Added by GWebDev. Format: camShake intensity time Arguments: Name Type Description intensity float How strong the shake is. time int The amount of time in milliseconds the shake will last for. (If it is 0 then it will last forever) stopCamShake This Function Was Added by GWebDev. Format: stopCamShake Arguments: None. Just type stopCamShake . noteRotate This Function Was Added by GWebDev. Format: noteRotate col deg ccw time amount tweenType easeType Arguments: Name Type Description col int The column it will rotate. 0 to 7 deg int The amount of degrees the note will rotate to. ccw bool If it should rotate counterclockwise or not. time int The amount of time in milliseconds the note will take to rotate to the target degrees. (If it is 0 then it will last forever) amount int The amount of times the note will rotate. tweenType String LINEAR | SINE | QUINT | QUART | QUAD | EXPO | ELASTIC | CUBIC | CIRC | BOUNCE | BACK easeType String IN | OUT | IN_OUT | OUT_IN Sidenote 1: The col should only be either 0 to 7. The reason it doesn't start with 1 is because computers start counting from whole numbers and not from counting numbers. Sidenote 2: The Tween & Ease types are CASE SENSITIVE so please write the exact text of your choice from the Description. Sidenote 3: For Ease previews, look at: https://easings.net/ camZoom This Function Was Added by GWebDev. Format: camZoom zoom time tweenType easeType Arguments: Name Type Description zoom float The zoom you want the camera to be in. time int The amount of time in milliseconds before the camera zooms to the target zoom. (If it is 0 then it will last forever) tweenType String LINEAR | SINE | QUINT | QUART | QUAD | EXPO | ELASTIC | CUBIC | CIRC | BOUNCE | BACK easeType String IN | OUT | IN_OUT | OUT_IN Sidenote 1: The Tween & Ease types are CASE SENSITIVE so please write the exact text of your choice from the Description. Sidenote 2: If the zoom is 0 it will reset the Camera Zoom. camMove This Function Was Made By GWebDev. Format: camMove offsetX offsetY time tweenType easeType Arguments: Name Type Description offsetX int Camera Offset in the X Axis. offsetY int Camera Offset in the Y Axis. time int The amount of time in milliseconds it will take for the Camera to move to the specified offsets. (If it is 0 then it will last forever) tweenType String LINEAR | SINE | QUINT | QUART | QUAD | EXPO | ELASTIC | CUBIC | CIRC | BOUNCE | BACK easeType String IN | OUT | IN_OUT | OUT_IN Sidenote: The Tween & Ease types are CASE SENSITIVE so please write the exact text of your choice from the Description. openURL This Function Was Made By GWebDev. Format: openURL url Arguments: Name Type Description url String The URL you want to open. print This Function Was Made By GWebDev. Format: print message Arguments: Name Type Description message String Prints a message to the console. (Used for Debugging)","title":"About"},{"location":"#about","text":"Vs Robtop is a mod developed by Breadward MacGluten. This is the official charter for the mod. What you are reading is the documentation for the charter. This piece of information was meant for the following people: Members: Breadward MacGluten # Charting Mine and Valen's songs. MauveDash # Charting her own songs. Duckstuffed # Charting his own songs. GWebDev # Probably some of my songs or just the events of my songs. Myst # I have no idea what he will do.","title":"About"},{"location":"#charter-problems","text":"No Sound Tray (YET) When making a chart PLEASE create a folder named as the song you have entered in the charter in the path of assets/data/charts/thesongyouentered . The song name provided in the Charter must exactly match the folder name which is made inside of assets/data/charts . Gameplay isn't finished so if it crashes don't be surprised. (I'm talking about when you preview the chart by pressing Enter on the Charter) If you press Enter it'll test the Chart BUT it also autosaves and overwrites the Chart at assets/data/charts/thesongyouentered/1.bin . Only save the Chart AS 1.bin inside of assets/data/charts/thesongyouentered . Holding Alt to drag place notes can cause lagging depending on the amount of notes you have placed. Event Notes CANNOT be previewed in the gameplay because i'd have to code the functions you call from the event notes in the Gameplay. You can only chart and preview . There is no Title Screen or Menu . (Hey that rhymed) OGG files should be placed inside of assets/ogg/songs/thesongyouentered/Inst.ogg Inst.ogg is required while Voices.ogg isn't required. ( If you include Voices.ogg it'll have audio cracks so i suggest exporting your ogg file with the INSTRUMENTAL and VOICES as Inst.ogg instead of separating both of them just like what \"Tutorial\" did ) There is no keybind to change the note's sustain length . (You have to manually type it) You have to use a 44100 hz speaker so the notes won't lag. Vs Robtop is the only one that can open the saved charts . IF YOU ACCUSE ME OF HACKING YOUR COMPUTER","title":"Charter Problems"},{"location":"#charter-features","text":"Pressing Q or E will change what type of note you place next. Pressing Tab allows you to change what data of the next notes you place are. Holding Alt and Holding Left Click while moving your mouse allows you to place Multiple Notes. Holding Control and Pressing Left Click on a note will allow you to select the note and change its data. Pressing Left or Right allows you to change sections. Holding Up or Down will allow you to scroll through the section. (Keyboard) Scrolling Up or Down will also allow you to scroll through the section. (Mouse) Holding Shift allows you to free place notes. (Disable snapping) Pressing Spacebar allows you to Pause/Resume the music. There are buttons that explain what else you can do. If you are wondering why the song doesn't load when you enter it PRESS THE RELOAD SONG BUTTON.","title":"Charter Features"},{"location":"#what-else","text":"The Charter includes another type of note called an Event Note. (Kinda like in Psych Engine) However the Event Notes here are actually coded. The Documentation will show the list of things you can do with the Event Notes. If you, a member of the mod, wants to do something that isn't in the list of things that you can do with the Event Notes then contact me to add your OWN function. (I will also show the name of the person who added these functions) The Documentation will constantly be edited when someone adds something to the list of Event Note functions. (But it will no longer be edited once the mod is rolled out.) The Documentation will also be made public after the mod released.","title":"What Else"},{"location":"#hard-coding-and-soft-coding","text":"Before showing the list of things you can do with the Event Notes, you'd have to learn what you can pass in the list of things you can do with the Event Notes. They are defined as functions which is type of code that executes multiple code. (I am the one who is going to be coding this) First you need to know the difference between Hard Coding and Soft Coding. You also need to know about some terminology. Compiling is a process in which human written code is translated into machine code or 1s and 0s which the computer can only understand. After compiling, you cannot retrieve the human readable code. Hard Coding is the process wherein the code is being embedded directly in an application which is compiled. Soft Coding is the process wherein the code isn't compiled but is read by a compiled application to execute/run. I don't think that GDScript (which is the coding language Godot uses) is Hard Coding but i'll call it that way since it's changed into .gdc files and i have no idea if they can be modified or not but whatever. So the functions are coded by me and are hardcoded while the Event Notes are coded by the charter and are softcoded .","title":"Hard Coding And Soft Coding"},{"location":"#variables","text":"Variables are stuff that you store data to in Coding just like in Math Algebra. Variables will be used in Event Notes but not by declaring one like in your Typical Coding Session. In this case, you pass data directly in the function with the Event Notes. But the question is... what do i pass?","title":"Variables"},{"location":"#types-of-variables","text":"There are plenty types of Variables SPECIALLY in game engines like Godot but for GEVT (GWeb Event) Code, we will only use 5 types of variables. Here is the list of Variables: int - An Integer is a type of variable that can hold Positive or Negative numbers. The most common type of Integer is the Int32 type which allows you to store a 4 byte number. By default, an Int32 is signed giving it the ability to store Negative numbers. The minimum value of an Int32 is -2147483648 and the maximum value of an Int32 is 2147483647 . String - A String is a type of variable that can hold TEXT . It usually starts with 2 Quotation Marks. In my event system, you HAVE to use Quotation Marks instead of Apostrophes. An example of a String is: \"Hello World\". float - A Float is a type of variable that can hold Positive or Negative DECIMAL numbers. Floats are usually 4 bytes like Int32 variables but it depends and i could be wrong. A Float is usually called as a Single because they have no Girlfriend . double - A Double is a type of variable that is like a Float but can hold twice more because it is a Couple. bool - A Boolean is a type of variable that can be either true or false. (In lowercase) Me mentioning that Floats have no Girlfriends (they are still called as a Single) and doubles being Couples are jokes and are not real terminologies in coding.","title":"Types Of Variables"},{"location":"#before-the-function-list","text":"I hope that you will understand the following list of functions you can code in the Event Notes. Before the list tho i wanted to show you a demonstration of how the functions should be called. FUNCTION ARG1 ARG2 ARG3 ARG4 The first word is the function you want to call and the arg1, arg2, arg3 and arg4 are the arguments you pass. Each of the arguments should be a variable type. The type of arguments in each function will be specified in the function list. The function names are also CASE SENSITIVE meaning you have to type it in the same capitalization and stuff. Good Luck!","title":"Before The Function List"},{"location":"#function-list","text":"","title":"Function List"},{"location":"#camshake","text":"This Function Was Added by GWebDev. Format: camShake intensity time","title":"camShake"},{"location":"#arguments","text":"Name Type Description intensity float How strong the shake is. time int The amount of time in milliseconds the shake will last for. (If it is 0 then it will last forever)","title":"Arguments:"},{"location":"#stopcamshake","text":"This Function Was Added by GWebDev. Format: stopCamShake","title":"stopCamShake"},{"location":"#arguments_1","text":"","title":"Arguments:"},{"location":"#none-just-type-stopcamshake","text":"","title":"None. Just type stopCamShake."},{"location":"#noterotate","text":"This Function Was Added by GWebDev. Format: noteRotate col deg ccw time amount tweenType easeType","title":"noteRotate"},{"location":"#arguments_2","text":"Name Type Description col int The column it will rotate. 0 to 7 deg int The amount of degrees the note will rotate to. ccw bool If it should rotate counterclockwise or not. time int The amount of time in milliseconds the note will take to rotate to the target degrees. (If it is 0 then it will last forever) amount int The amount of times the note will rotate. tweenType String LINEAR | SINE | QUINT | QUART | QUAD | EXPO | ELASTIC | CUBIC | CIRC | BOUNCE | BACK easeType String IN | OUT | IN_OUT | OUT_IN Sidenote 1: The col should only be either 0 to 7. The reason it doesn't start with 1 is because computers start counting from whole numbers and not from counting numbers. Sidenote 2: The Tween & Ease types are CASE SENSITIVE so please write the exact text of your choice from the Description. Sidenote 3: For Ease previews, look at: https://easings.net/","title":"Arguments:"},{"location":"#camzoom","text":"This Function Was Added by GWebDev. Format: camZoom zoom time tweenType easeType","title":"camZoom"},{"location":"#arguments_3","text":"Name Type Description zoom float The zoom you want the camera to be in. time int The amount of time in milliseconds before the camera zooms to the target zoom. (If it is 0 then it will last forever) tweenType String LINEAR | SINE | QUINT | QUART | QUAD | EXPO | ELASTIC | CUBIC | CIRC | BOUNCE | BACK easeType String IN | OUT | IN_OUT | OUT_IN Sidenote 1: The Tween & Ease types are CASE SENSITIVE so please write the exact text of your choice from the Description. Sidenote 2: If the zoom is 0 it will reset the Camera Zoom.","title":"Arguments:"},{"location":"#cammove","text":"This Function Was Made By GWebDev. Format: camMove offsetX offsetY time tweenType easeType","title":"camMove"},{"location":"#arguments_4","text":"Name Type Description offsetX int Camera Offset in the X Axis. offsetY int Camera Offset in the Y Axis. time int The amount of time in milliseconds it will take for the Camera to move to the specified offsets. (If it is 0 then it will last forever) tweenType String LINEAR | SINE | QUINT | QUART | QUAD | EXPO | ELASTIC | CUBIC | CIRC | BOUNCE | BACK easeType String IN | OUT | IN_OUT | OUT_IN Sidenote: The Tween & Ease types are CASE SENSITIVE so please write the exact text of your choice from the Description.","title":"Arguments:"},{"location":"#openurl","text":"This Function Was Made By GWebDev. Format: openURL url","title":"openURL"},{"location":"#arguments_5","text":"Name Type Description url String The URL you want to open.","title":"Arguments:"},{"location":"#print","text":"This Function Was Made By GWebDev. Format: print message","title":"print"},{"location":"#arguments_6","text":"Name Type Description message String Prints a message to the console. (Used for Debugging)","title":"Arguments:"}]}